To create and set the virtual environment:
==========================================
virtualenv venv
Set-ExecutionPolicy Unrestricted -Scope Process
.\venv\Scripts\activate.ps1
pip install flask
pip install flask-sqlalchemy


To create the tables for the first time (in the python interpreter):
====================================================================
from app import db
db.create_all()
exit()

To add the new columns to the werksessie table (in the python interpreter):
===========================================================================
from sqlalchemy import create_engine
engine = create_engine('sqlite:///interventie.db')
engine.execute('alter table werksessies add column auteurs String(500)')
engine.execute('alter table werksessies add column datum String(100)')

To start the app:
=================
Set-ExecutionPolicy Unrestricted -Scope Process
.\venv\Scripts\activate.ps1
$env:SQL_USER = 'root'
$env:SQL_PASSWORD = 'pgnInterventie2021LvG.'
$env:SQL_HOST = '192.168.2.101'
$env:SQL_DB = 'interventie'
$env:SQL_PORT = '3306'
$env:SERVER_TYPE = 'mysql'
$env:FORCE_HTTPS = 'FALSE'
python app.py

To create a Docker container for use on synology:
=================================================
pip freeze > requirements.txt
Set-ExecutionPolicy Unrestricted -Scope Process
docker image build -t interventie .
docker save -o interventie.tar interventie:latest

To create a Docker container for use on Azure:
==============================================
Set-ExecutionPolicy Unrestricted -Scope Process
Import-Module Az.Accounts
Connect-AzAccount
Connect-AzContainerRegistry -Name acrafmweudinterventie01
docker image build -t interventie_docker .
docker tag interventie_docker acrafmweudinterventie01.azurecr.io/interventie:backport
docker push acrafmweudinterventie01.azurecr.io/interventie:backport
docker rmi acrafmweudinterventie01.azurecr.io/interventie:backport
